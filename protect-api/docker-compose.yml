version: "3.7"

services:
  protect-api:
    build:
      dockerfile: ../Dockerfile
      context: ${NS8_SRC}/protect-tools-docker/protect-api/build-context
    depends_on:
      - mysql
      - dynamodb
    environment:
      # uses the [current_session] section from credentials file for MFA
      AWS_PROFILE: current_session
      AWS_REGION: ${AWS_REGION}
      AWS_DEFAULT_REGION: ${AWS_REGION}
      PROTECT_API_COMPOSE_MYSQL: ${PROTECT_API_COMPOSE_MYSQL:-}
      PROTECT_API_COMPOSE_POSTGRES: ${PROTECT_API_COMPOSE_POSTGRES:-}
      DYNAMODB_ENDPOINT_URL: "http://dynamodb:8000"
      # ns8-protect-api expected env vars
      APP_ENV: ${APP_ENV}
      # start with or without nodemon and debugger
      NO_DEBUG: ${NO_DEBUG:-}
      # If set, do not use command-line arguments to override values from config/${APP_ENV}.yml
      PROTECT_API_NO_CONFIG_OVERRIDES: ${PROTECT_API_NO_CONFIG_OVERRIDES:-}
      # these are used to override values from config/${APP_ENV}.yml, if set
      PROTECT_API_URL: ${PROTECT_API_URL}
      PROTECT_CLIENT_URL: ${PROTECT_CLIENT_URL:-}
      TEMPLATE_SERVICE_URL: ${TEMPLATE_SERVICE_URL:-}

    networks:
      - protect
    ports:
      - "127.0.0.1:49229:9229"
    volumes:
      # TODO: potentially use localstack for SSM/S3/Lambda
      - "~/.aws/:/home/node/.aws:ro"
      - "~/.npmrc/:/home/node/.npmrc:ro"
      - "${NS8_SRC}/ns8-protect-api:/home/node/ns8-protect-api"

  ngrok-protect-api:
    depends_on:
      - protect-api
    environment:
      NGROK_AUTH: "${NGROK_AUTH}"
      NGROK_SUBDOMAIN: "${PROTECT_API_SUBDOMAIN}"
      NGROK_PORT: "protect-api:8080"
    image: wernight/ngrok
    networks:
      - protect
    ports:
      - "40401:4040"
